#! /bin/sh /usr/share/dpatch/dpatch-run
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Upstream r1179525

@DPATCH@
commit d239e98144d468928fbd2d3f519bd9265d162932
Author: Joe Orton <jorton@apache.org>
Date:   Thu Oct 6 07:39:13 2011 +0000

    Merge r1179239 from trunk:
    
    SECURITY (CVE-2011-3368): Prevent unintended pattern expansion in some
    reverse proxy configurations by strictly validating the request-URI:
    
    * server/protocol.c (read_request_line): Send a 400 response if the
      request-URI does not match the grammar from RFC 2616.  This ensures
      the input string for RewriteRule et al really is an absolute path.
    
    Reviewed by: jim, covener, rjung
    
    
    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/branches/2.2.x@1179525 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/server/protocol.c b/server/protocol.c
index 55468fc..b45851a 100644
--- a/server/protocol.c
+++ b/server/protocol.c
@@ -640,6 +640,25 @@ static int read_request_line(request_rec *r, apr_bucket_brigade *bb)
 
     ap_parse_uri(r, uri);
 
+    /* RFC 2616:
+     *   Request-URI    = "*" | absoluteURI | abs_path | authority
+     *
+     * authority is a special case for CONNECT.  If the request is not
+     * using CONNECT, and the parsed URI does not have scheme, and
+     * it does not begin with '/', and it is not '*', then, fail
+     * and give a 400 response. */
+    if (r->method_number != M_CONNECT 
+        && !r->parsed_uri.scheme 
+        && uri[0] != '/'
+        && !(uri[0] == '*' && uri[1] == '\0')) {
+        ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r,
+                      "invalid request-URI %s", uri);
+        r->args = NULL;
+        r->hostname = NULL;
+        r->status = HTTP_BAD_REQUEST;
+        r->uri = apr_pstrdup(r->pool, uri);
+    }
+
     if (ll[0]) {
         r->assbackwards = 0;
         pro = ll;
